[
    {
        "id": 1,
        "titulo": "Python: Origem do nome",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/python-origem-do-nome> \n\n Por que uma das linguagens de programação mais amada no mundo tem esse nome e qual a origem dele? Tem relação com algum tipo de cobra? Descubra isso e muito mais neste artigo! \n\n ### Um pouco de história \n\n [Guido Van Rossum](https://pt.wikipedia.org/wiki/Guido_van_Rossum) criou o [Python](https://www.alura.com.br/cursos-online-programacao/python) em 1989. Ele trabalhava no [Centrum Voor Wiskunde en Informatica](https://www.cwi.nl/) no início dos anos 1980, e seu trabalho era implementar a linguagem de programação conhecida como [ABC](https://pt.wikipedia.org/wiki/ABC_(linguagem_de_programa%C3%A7%C3%A3o)).  \n\n Durante o final dos anos 1980, enquanto ainda estava no CWI, ele começou a procurar por uma linguagem de script que tivesse sintaxe semelhante ao ABC, mas que tivesse acesso às chamadas de sistema do [Amoeba](https://pt.wikipedia.org/wiki/Amoeba_sistema_operacional). Após procurar e não encontrar nenhuma linguagem que atendesse às suas necessidades, Rossum decidiu projetar uma linguagem de script simples que pudesse superar as inadequações do ABC.  \n\n No final da década de 1980, Rossum começou a desenvolver o novo script, e em 1991, lançou a versão de abertura da linguagem de programação. Esta primeira versão tinha um sistema de módulo [Modula-3](https://pt.wikipedia.org/wiki/Modula-3), linguagem que foi posteriormente denominada “Python”. \n\n ### Certo, mas de onde vem esse nome? \n\n Muitas pessoas costumam pensar que o nome Python tem origem em um tipo de cobra, já que o logotipo do Python mostra a imagem de uma cobra azul e amarela. \n\n ![gif do logo da linguagem de programação python](../assets/1/gif-1.gif)  \n\n No entanto, a verdadeira história por trás da nomenclatura é um pouco diferente.  \n\n Na década de 1970, a BBC tinha um programa de TV popular do qual van Rossum era um grande fã chamado [Fly Circus de Monty Python](https://pt.wikipedia.org/wiki/Monty_Python%27s_Flying_Circus), ou apenas Monty Python para os íntimos.  \n\n Assim, quando desenvolveu a linguagem, ele pensou que precisava de um nome que fosse curto, único e um pouco misterioso, e por algum motivo que só ele conhecia, decidiu chamar o projeto de ‘Python’. \n\n ![homem saindo de uma loja](../assets/1/gif-2.gif) \n\n E se você fosse criar sua própria linguagem de programação, qual nome daria? Faria uma homenagem a sua série, jogo ou filme favorito? \n\n No nosso [curso de python](https://www.alura.com.br/cursos-online-programacao/python), que é uma formação completa, entramos também em outras curiosidades da linguagem e sua história, pois a comunidade é muito forte e toma decisões importantes. \n\n ### Conclusão \n\n Atualmente, [o Python é uma tendência mundial no mundo das pessoas que desenvolvem](https://blog.revelo.com.br/desenvolvedores-python-estao-em-alta-no-mercado/), já que pode ser aplicado em diferentes cenários, como: Data Science, aplicações web, desenvolvimento Back-End, criação de jogos e scripts. \n\n Quer aprender mais sobre Python? Veja: \n\n - [Python do zero - Formação na linguagem mais querida do momento](https://www.alura.com.br/formacao-Python-linguagem) \n\n - [Python para Web - Formação Django](https://www.alura.com.br/formacao-django) \n\n - [API com Python - Curso Django Rest Framework](https://www.alura.com.br/curso-online-api-django-3-rest-framework) \n\n - [TDD com Python - Desenvolvimento guiado por testes](https://cursos.alura.com.br/course/tdd-django-3-testes) \n\n - [Pacman com Python - Criando um jogo com Pygame](https://www.alura.com.br/curso-online-python-pygame-pacman-colisao-pontuacao) \n\n "
    },
    {
        "id": 2,
        "titulo": "O que é Node?",
        "texto": "> Fonte: <https://www.alura.com.br/artigos/node-js-definicao-caracteristicas-vantagens-usos> \n\n  ### Introdução \n\n Node.JS é uma ferramenta amplamente utilizada no universo de desenvolvimento e todos que atuam na área de tecnologia já ouviram falar, nem que seja nos milhares de anúncios de cursos ou mesmo de vagas. Mas você se pergunta: afinal, o que é Node.js? Para que serve? Como ele atua \n\n \n\n Calma que, antes de olhar para o ambiente Node.JS, precisamos entender um pouco sobre o que é o JavaScript e como ele funciona. Vamos lá! \n\n \n\n ### Node.JS e JavaScript \n\n \n\n JavaScript é uma linguagem de programação que originalmente foi desenvolvida para trazer maior interatividade aos **websites** através da manipulação do *DOM* (Document Object Model). Vamos conferir a definição do livro que é uma referência na temática, o **Eloquent JavaScript** \n\n \n\n > O JavaScript foi introduzido em 1995 como uma forma de adicionar dinamicidade à páginas da web no navegador Netscape Navigator. Desde então, a linguagem foi adotada por todos os outros principais navegadores gráficos da web. Ela tornou possíveis o desenvolvimento das aplicações modernas  da web - aplicações com os quais você pode interagir diretamente sem recarregar a página a cada ação. JavaScript também é usado em sites mais tradicionais para fornecer várias formas de interatividade de forma mais inteligente \n\n  \n\n >Fonte: [Tradução livre do livro Eloquent JavaScript](https://eloquentjavascript.net/00_intro.html) \n\n \n\n Portanto, de forma resumida, podemos entender que o **JavaScript** foi pensado para ser rápido, dinâmico e acessível. A *linguagem interpretada* possibilita subir ou trabalhar em suas aplicações sem precisar  configurar todo um ambiente complexo. \n\n \n\n Essas características motivaram o engenheiro de software Ryan Dahl a desenvolver um ambiente, como um programa que você instala no seu computador, que trabalha com a linguagem JavaScript fora do navegador e pelo lado do servidor, via terminal, de uma maneira menos restritiva \n\n \n\n ### Tudo bem, mas e o Node.JS? \n\n  \n\n O JavaScript nasceu para atender demandas voltadas ao Front e como as necessidades aumentam de acordo com o crescimento tecnológico, surgiu a ideia de utilizar uma mesma linguagem no lado do cliente e do servidor para otimizar processos e serviços. Dessa forma, o Node.JS  aparece como uma alternativa viável para programação Back-End por se tratar de um ambiente para desenvolvimento utilizando a linguagem JavaScript \n\n \n\n De acordo com sua definição oficial, o Node é um **runtime**, que nada mais é do que um conjunto de códigos, API’s, ou seja, são bibliotecas responsáveis pelo tempo de execução (é o que faz o seu programa rodar) que funciona como um interpretador de JavaScript fora do ambiente do **navegador web**. \n\n \n\n É importante frisar que o Node.JS é um ambiente de execução assíncrono, isto é, ele trabalha de modo a não bloquear no momento da execução da aplicação, delegando os processos demorados a um segundo plano. \n\n \n\n Ele dá muito certo  com os servidores de arquitetura **“single threaded”**, isto significa que todos os pedidos para o servidor são executados no mesmo tópico - em vez de serem gerados em processos separados. Um dos grandes diferenciais da parceria Node.JS e Javascript é o bom desempenho no uso de APIs, já que o Javascript faz bastante uso de APIs assíncronas \n\n \n\n Você deve estar se perguntando: “Beleza, já entendi o que é o Node.JS e seu diferencial quando o assunto é o seu uso com o Javascript, mas o que isso significa?” Vamos entender um pouco mais... vem comigo, que te explico.. \n\n \n\n #### Como o Node.JS funciona \n\n \n\n O **Node é capaz de interpretar um código JavaScript**, igual ao que o navegador faz. Sendo assim, quando o navegador recebe um comando em JavaScript, ele o interpreta e depois executa as instruções fornecidas. \n\n \n\n O Node é fantástico (totalmente “sem parcialidade”, aqui pessoal, juro!)  porque torna possível o envio de instruções (os nossos códigos) sem precisar de um navegador ativo, basta ter o Node.JS instalado e utilizar o terminal para executar um programa construído em JavaScript.  \n\n \n\n Além disso, você pode utilizar apenas uma linguagem de programação para tratar requisições entre cliente e servidor. Sensacional, não é? \n\n \n\n Para que todo esse processo seja possível de ocorrer fora do navegador, o Node utiliza uma outra ferramenta chamada de **Chrome's V8 JavaScript Engine.** É esse motor V8 do Chrome que compila e executa o código JavaScript no lugar de apenas interpretá-lo. \n\n \n\n *Ainda parece muito confuso? Vem comigo que te explico melhor… \n\n \n\n O motor V8 da Google é o centro, o coração que processa todo o código JavaScript do navegador para que sua máquina compreenda e disponibilize os recursos e interações. Só é possível visualizar páginas em JavaScript ou trabalhar com um código pelo Node.JS devido ao processamento do motor V8 do Chrome. \n\n \n\n Graças ao núcleo baseado em JavaScript e no motor V8 da Google, o Node.JS possui algumas características que, dependendo do cenário, podem ser consideradas como *benefícios* da plataforma, vamos conferir algumas \n\n \n\n ### Características do Node.Js \n\n \n\n Node.JS pode ser utilizado nas famosas APIS Rest, web scrapping, chatbots, IoT, web servers, aplicações Desktop, tudo devido a sua característica altamente versátil. Dentre as principais, podemos citar \n\n \n\n - **Multiplataforma:** permite criar desde aplicativos desktop, aplicativos móveis e até sites SaaS \n\n - **Multi-paradigma:** é possível programar em diferentes paradigmas, como: Orientado a Objetos, funcional, imperativo e dirigido à eventos \n\n - **Open Source:** é uma plataforma de código aberto, isso significa que você pode ter acesso ao código fonte do Node.JS e realizar suas próprias customizações ou mesmo contribuir para a comunidade de forma direta \n\n - **Escalável:** Node.JS  foi criado para construir aplicações web escaláveis, como podemos ver na sua [documentação oficial]( https://nodejs.org/en/about/) \n\n \n\n O Node.JS ainda apresenta uma curva de aprendizado relativamente menor comparado à outras linguagens voltadas ao Back-End e possui uma comunidade gigante disposta a ajudar. E sem dúvida a união dessas forças é o **super poder do Node.JS** \n\n \n\n ### Empresas que usam Node.Js \n\n \n\n Tudo bem, falamos das inúmeras qualidades do Node.JS mas, na prática… onde eu posso trabalhar com a ferramenta \n\n \n\n Por conta dos *super-poderes* do Node.JS, uma gama de gigantes no mercado atua diretamente com a plataforma em suas regras de negócio, confere só a listinha de algumas \n\n \n\n - **NetFlix:** substituiu o renderizador baseado em Java pelo de JavaScript com Node.JS para diminuir o tempo de espera nas requisições dos usuários e conseguiu uma redução de cerca de 1 minuto \n\n - **IBM:** criou o The Canary in the Gold Mine (CITGM), um utilitário de testes amplamente utilizado pela companhia \n\n - **LinkedIn:** o aplicativo **mobile** da maior rede profissional é construído em Node e HTML5, você pode conferir a matéria na íntegra [aqui](https://venturebeat.com/2011/08/16/linkedin-node/) \n\n - **Uber:** sistema de relacionamento entre usuários e condutores foi construído em Node.JS por conta de sua rápida resposta \n\n \n\n E... pasmem! Node.js foi inclusive utilizado pela **NASA** para criar uma API que integra três bases de dados em um só, justamente para otimizar o acesso aos dados. [Node.JS ajuda NASA a manter Astronautas seguros e arquivos acessíveis - **em inglês**](https://openjsf.org/wp-content/uploads/sites/84/2020/02/Case_Study-Node.js-NASA.pdf) \n\n \n\n Node.JS está mesmo voando!! \n\n \n\n ### Meu primeiro código em Node.Js \n\n \n\n Para rodar a plataforma na sua máquina é necessário instalar o Node.JS. Caso você ainda não tenha, siga o tutorial [**Instalando o Node.JS no Windows e linux**](https://www.alura.com.br/artigos/instalando-nodejs-no-windows-e-linux#:~:text=Ap%C3%B3s%20baixar%20o%20instalador%2C%20basta,gostaria%20de%20instalar%20outras%20ferramentas.) \n\n \n\n E depois colocar a mão no código \n\n \n\n Aquele “Hello World!” para dar sorte:\n\n \n\n ```\n\n console.log(‘Hello, World!’)\n\n ```\n\n \n\n E agora você pode subir seu primeiro servidor:\n\n \n\n ```\n\n const http = require('http');\n\n const server = http.createServer(function (req, res) {\n\n res.writeHead(200, {'Content-type': 'text/html'});\n\n res.end('Hello Node!');\n\n });\n\n server.listen(3000);\n\n console.log('Servidor funcionando. Acesse: localhost:3000');\n\n ```\n\n \n\n Ah, é importante lembrar que aqui o código está de acordo com a última versão estável, a versão LTS (Long-term support ou suporte de longo prazo, em português). Mas o Node trouxe uma novidade muito bacana em sua nova versão, olha só no artigo [**Revolução no Node.js: adeus ao Axios e Node-fetch na versão 17.5.0**](https://www.alura.com.br/artigos/revolucao-node-js-adeus-axios-fetch-api-versao-17-5-0).\n\n \n\n Agora é só comemorar e aprofundar seus estudos em Node.JS!"
    },
    {
        "id": 3,
        "titulo": "O que é React?",
        "texto": ">Fonte:<https://www.alura.com.br/artigos/react-js?gclid=Cj0KCQiA54KfBhCKARIsAJzSrdorUAcvpzAcOX7h8jjYSgYHwP5ohR1-qaoMUz_J_wt4X9ANstNIEF0aAn6kEALw_wcB> \n\n  Se você está começando a aprender sobre desenvolvimento de software, provavelmente já ouviu falar sobre React. Mas o que é esse framework e por que é tão popular entre pessoas desenvolvedoras?.  \n\n ### Por que o React é popular no mundo do desenvolvimento? \n\n  \n\n Você como pessoa usuária de **redes sociais**, principalmente do ecossistema do Facebook, já deve ter percebido que determinadas **partes da tela tem** **comportamentos especiais** ou independentes do restante da aplicação. Por exemplo, os **anúncios que são exibidos**.  \n\n Pensando na melhor forma de lidar com esse tipo de funcionalidade, a equipe de desenvolvedores do Facebook desenvolveu uma forma muito específica de lidar com os **dados exibidos** e a atualização dessas pequenas porções da aplicação: o React. \n\n Muitas empresas de tecnologia, incluindo o Instagram, a Netflix, o Airbnb e o Twitter, usam o React em suas **aplicações web** e **móveis**. Isso significa que há uma grande variedade de oportunidades de emprego em diferentes tipos de empresas que usam React. \n\n Além disso, o React é uma biblioteca de código aberto, o que significa que há uma comunidade ativa e vibrante de desenvolvedores e desenvolvedoras que contribuem com código e recursos para ajudar a melhorar a tecnologia. Isso pode ser uma ótima maneira de se conectar com outros desenvolvedores e aprender sobre as últimas tendências e melhores práticas no mundo do React. \n\n ### Resumo do porquê React JS \n\n  \n\n Em resumo, o **mercado de trabalho** para desenvolvedores(as) React é muito bom, com muitas empresas de tecnologia que usam essa tecnologia em suas aplicações. Além disso, a comunidade de **código aberto** do React é ativa e oferece muitas oportunidades de **aprendizado e networking**. \n\n Neste artigo, você descobrirá o que é React, para que serve e como mergulhar mais fundo nesse universo do Front-End."
    }
]